function [Y,Xf,Af] = myNN(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 09-Feb-2015 00:27:41.
% 
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 12xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [1;3.8;0.08;0;0.6;0.009;1;6;0.98713;2.72;0.23;8];
  x1_step1_gain = [2;0.169491525423729;1.6;1.20481927710843;0.0306748466257669;3.32225913621262;0.00694444444444444;0.00460829493087558;38.5728061716489;1.55038759689923;1.12994350282486;0.32258064516129];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [1.8031150407580673889;-2.2124389660335537222;-0.46978138057173363107;-2.1371644570899248627;-1.1037241279216611911;-0.46099284184447975043;-1.6620349844527821936;1.1356949560029026003;0.63293420979436532114;-2.1098943011287820681];
  IW1_1 = [-0.13988565089626003868 0.64578600361433891042 -0.52308602165455342359 -0.16828688400326366481 -1.0189650083275205716 -0.3598522145343671097 -0.39420699108053086634 -0.62479242982710825327 0.2930653906481543447 -0.34708601775919145638 -0.68531293664235959362 -0.4579870204273471801;1.7828269457079659599 -0.47875807395181046999 0.61815457716343613637 1.7795944781054577888 -0.95690669634562242063 -0.27932348038611520824 -0.41072540372279103815 -0.34949087348262902752 0.071421271338372116499 -0.80529168693865782469 0.17148374180312514481 0.038162245236648142943;0.29946061098432125158 0.89519340251825008092 -1.1125012127441571419 -1.2379411513816094281 1.5976229397820109757 1.0378322665925057144 -0.14363928972267578366 0.89179142099943731203 -0.18848938446267629598 -0.091573909698918598554 0.29465895019066912219 0.015880434053835542491;1.3249390561031548774 0.17367344711589480233 -2.7196506037315399951 -1.7140313844104264618 -0.44631235257632573266 1.8088287980454453852 0.017193004115239336749 1.4355753350119973 4.2847576691130315751 -0.79681925043204704373 -0.63295269598227277275 -0.24409639743482106078;-1.0503901126193193605 0.15780984293094552084 -0.0037188495026112058928 -1.0424486513481057148 -1.5556168172431705798 -0.13959853190059481887 -2.3209681727944673213 -0.57173729743826062766 3.5303597149004688482 -0.0032407101268530011384 0.18129569707342643725 0.55325802942855828448;0.36729240611573754638 -0.2883987669790578634 -0.47659393432001045943 -0.92820420350025534262 -0.11356373456760320007 0.37909732864152834164 1.232117438494732431 0.10982413045498069792 0.83384187848006574573 0.14687299325895078472 -0.28352505698419355751 -0.07084658202884042133;-0.0078216375049199680231 -2.6711108506466199053 1.2685378157111428798 2.3266750490238350402 -2.8607706698829393765 1.3812280424458864836 -1.9675267294322273948 0.78800595835401165967 0.54724162700799827697 -0.029042027582535198671 -0.8713691897935423869 -1.4695594837754020201;0.61623457979528339923 1.4887934953334176491 1.67624753508694746 -0.030853714168617468044 -0.76579624333158013982 -0.74734455278739342354 1.4233305527955548708 -0.56697551032130610871 0.35886601185155636573 -1.0861045302007905633 1.2458245013011850499 -1.431655266481483002;-0.38374287284167812873 -0.068006200048649226297 0.087060691202225953811 -0.14652536612473979205 -0.49993420858769321846 0.13805714149817360781 1.0702592425467383208 -0.84955919832350623722 -0.25280607460184523205 -0.82125965081264040712 2.0325505576217524073 -0.86131254758375708214;-0.25284487546615258546 -0.30203535208352083608 1.0310713140301133173 -1.2164398217154692716 0.094285617920075504017 0.42119745871289249184 0.073239839866982736627 1.1192673300072502052 -0.13042783210374644942 0.50710907085065914934 1.1803391862604442064 1.6340127124111647472];
  
  % Layer 2
  b2 = 0.1759027760527303863;
  LW2_1 = [-1.0347890657046607821 -0.53117691594706117897 -2.5757834972258923933 1.7605969214362042763 -0.80436199393407770142 -1.2603693273004274999 -0.22807060582144297878 -0.20177402078292727694 0.31554095501649515043 1.1076882113977875033];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 0.333333333333333;
  y1_step1_xoffset = 3;
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
