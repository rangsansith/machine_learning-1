function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 08-Feb-2015 23:21:13.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 12xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [1;3.8;0.08;0;0.6;0.009;1;6;0.98711;2.72;0.22;8];
  x1_step1_gain = [2;0.165289256198347;1.33333333333333;1.20481927710843;0.0306748466257669;3.32225913621262;0.00694444444444444;0.00460829493087558;38.5579332947754;1.55038759689923;1.12359550561798;0.289855072463768];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-2.1369633512938777109;0.066130539858767906081;-0.45617174241885893871;-0.16056182124066875616;0.73791022435542874547;-0.0055425484407876247223;0.59417891722923477094;0.25337733403080875405;0.87279383269166033177;3.9049860077587288387];
  IW1_1 = [0.12341299710583090998 0.50724274526634238747 0.88281864929946263221 1.1401645599714367307 0.73747816360717011186 0.89477762393629511894 0.45486766827481833753 0.61270003954494700604 0.63511012686445755815 0.86219394933250725899 -0.14026916635178654502 -0.027823426028369173391;-0.80302377832545079883 -0.15966154106657115541 -3.0050319589066023518 0.035600839524848049145 0.68611468496724614674 1.4367758410557343041 -0.052217326506807104636 0.58953697269032867556 1.5612672119754757993 -1.103445052478140731 0.28651608061652367176 -0.8879805055730819463;0.53317179703179529149 -0.32871176381849703807 0.82752082917856872868 0.024561065758227779154 0.60792277079190049083 -0.26696754906784742056 1.2977373472512814256 -0.78304548020091591098 -0.63987108406359693991 0.23252316226466829274 -0.73444321723470229468 -0.6679827919284966331;-0.45655714297730815021 -0.45333832015750963329 1.9324349285460677983 0.79221393601322576128 1.1514430395739676527 -2.134930660131653557 0.72369087003755983023 -0.51905290909534507193 -2.0589870847284181821 1.3070546305263412989 -0.37858341942987094875 0.46730343828954828966;-1.1432200807503958284 0.10681951805840736447 -0.61894159097564238614 0.54318859232359484324 1.6687516419497725462 -0.1269139674636077797 1.6032197421027534201 0.80960194766897386476 -1.7927409200410766577 0.08006282088347613235 -0.69428016265721004263 -0.21339210424366863994;0.032191470965999946507 0.33679000021856042579 -0.46943036154519968139 -0.041208140433399938207 1.4315843682502813472 -0.11858628851124944359 1.3689637165226709037 -0.18163078981890798391 -2.5902376484002833656 0.35172157477607979281 -0.41270058935180115034 -0.26874503350033907001;0.19190566423158963993 -0.78103886888384377318 1.5276111435121344506 0.89018923466031085745 0.36122084895257250414 -0.96712971571787065272 -0.41774476766822410401 0.91623182765312982667 1.1304259151324251853 -1.4453599786898199131 -2.6552022263083698839 0.1859402513083337205;0.96547287182913943404 -0.25785285636340160575 -0.81274306558953823831 0.044435300363841634397 -0.21870187322823847476 -0.0051506294298088659001 0.30629366880880298796 -0.25152292860892722093 -0.96621679797690951386 0.67838332285668445643 1.3934614123956283738 -1.2995052363098094084;-0.1354533381182251861 1.0232932256215623301 1.1574409639478409062 0.69814437349218949613 0.10302159711394612285 -1.297277349003624014 -0.13731064586308686093 -0.56314192741805468856 -0.15637712154862820624 -1.4913010026661135399 -0.82435319217145164306 0.36252441914520772137;0.11361399130071325736 -1.258359137040250042 -0.48569837096417489697 0.89906105880320907886 0.1714438675228212583 -0.51198727625500861649 -0.091567861031766131785 1.4991436720809434568 1.5053932717480913439 -0.67910863811590371775 2.2709208000000860039 -0.51297453233525658334];
  
  % Layer 2
  b2 = -0.10790283429033080409;
  LW2_1 = [0.64094936997046136895 0.28745411880848226183 -0.32804759748724943158 0.23935939284239793334 -0.66739037631629760661 0.83569849694626352488 -0.16039252192932010321 -0.45008424875651459329 0.23123040856731752468 0.50444584339056053324];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 0.333333333333333;
  y1_step1_xoffset = 3;
  
  % ===== SIMULATION ========
  
  % Dimensions
  Q = size(x1,2); % samples
  
  % Input 1
  xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
  
  % Layer 1
  a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);
  
  % Layer 2
  a2 = repmat(b2,1,Q) + LW2_1*a1;
  
  % Output 1
  y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
